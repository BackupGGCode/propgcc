Cross Compilation Instructions

This is a guide for how to produce propeller-elf-gcc tools for 
Windows (32 bit) or Raspberry Pi on your Linux machine. Both could
be produced natively, but take a long time to build, so cross compilation
is attractive.

The instructions assume a Ubuntu 12.04 LTS machine is being used to do
the builds. Other Linux versions should work as well (in particular newer
Ubuntu releases). They also assume you can already build the native
Linux tools.

==============================================================
WINDOWS
==============================================================

(1) Install the mingw32 toolchain for Ubuntu:
    sudo apt-get install mingw32

(2) Make the native propgcc toolchain (if you haven't already) by doing:
    make
in the propgcc directory. The output is in /opt/parallax.

(3) Build the Win32 toolchain by doing:
    make CROSS=win32
in the propgcc directory. The output is in /opt/parallax-win32.

==============================================================
RASPBERRY PI
==============================================================

(1) Install a Raspberry Pi cross compiler. I followed the directions from
http://hertaville.com/2012/09/28/development-environment-raspberry-pi-cross-compiler/,
but I skipped all the Eclipse stuff (the command line tools are all 
we need). This boils down to:

    mkdir ~/rpi
    cd ~/rpi
    git clone git://github.com/raspberrypi/tools.git
    export PATH=$PATH:~/rpi/tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian/bin/

You'll probably want to add the "export PATH=..." stuff to one of your
startup scripts, e.g. .bashrc, so as to avoid typing it every time.

(2) Make the native propgcc toolchain (if you haven't already).

(3) Build the Raspberry Pi toolchain by doing:
    make CROSS=rpi
in the propgcc directory. The output is in /opt/parallax-rpi.
